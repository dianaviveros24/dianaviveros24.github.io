{"version":3,"sources":["Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","handleChange","e","target","answer","value","setState","state","question","option","this","type","name","min","max","onChange","map","className","Check","inline","label","id","disabled","Component","App","Button","size","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAIqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,aAAe,SAACC,GACZ,MAA0BA,EAAEC,OAApBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAChB,EAAKC,SAAL,eAAiBF,EAASC,KAR1B,EAAKE,MAAQ,CACTC,SAAU,GACVC,OAAQ,GACRL,OAAQ,IALG,E,0CAanB,WACI,MAAqCM,KAAKH,MAAhBH,GAA1B,EAAQI,SAAR,EAAkBC,OAAlB,EAA0BL,QAC1B,OACI,gCACI,+DACA,iDACA,gCACI,uFACI,uBAAOO,KAAK,SAASC,KAAK,YAAYC,IAAI,IAAIC,IAAI,IAAIT,MAAOD,EAAQW,SAAUL,KAAKT,kBAExF,cAACF,EAAD,UACK,CAAC,WAAY,SAASiB,KAAI,SAACL,GAAD,OACvB,sBAA4BM,UAAU,OAAtC,UACI,cAAClB,EAAKmB,MAAN,CACIC,QAAM,EACNC,MAAM,IACNR,KAAK,SACLD,KAAMA,EACNU,GAAE,iBAAYV,EAAZ,QAEN,cAACZ,EAAKmB,MAAN,CACIC,QAAM,EACNC,MAAM,IACNR,KAAK,SACLD,KAAMA,EACNU,GAAE,iBAAYV,EAAZ,QAEN,cAACZ,EAAKmB,MAAN,CACIC,QAAM,EACNG,UAAQ,EACRF,MAAM,eACNT,KAAMA,EACNU,GAAE,iBAAYV,EAAZ,UApBV,iBAAoBA,mB,GA1BdY,aC0BnBC,MAzBf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,uDACA,sBAAKA,UAAU,OAAf,UACE,cAACQ,EAAA,EAAD,CACER,UAAU,WAAWS,KAAK,KAAKC,QAAQ,UADzC,qBASA,cAAC,EAAD,aCTKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.33561176.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            question: '',\n            option: '',\n            answer: ''\n        }\n    }\n    handleChange = (e) => {\n        const { answer, value } = e.target\n        this.setState({ [answer]: value })\n    }\n\n    render() {\n        const { question, option, answer } = this.state\n        return (\n            <div>\n                <h1>Test de Estilo de aprendizaje</h1>\n                <h2>Cuando aprendo:</h2>\n                <div>\n                    <label>Prefiero valerme de mis sensaciones y sentimientos\n                        <input type=\"number\" name=\"respuesta\" min=\"1\" max=\"4\" value={answer} onChange={this.handleChange}></input>\n                    </label>\n                    <Form>\n                        {['checkbox', 'radio'].map((type) => (\n                            <div key={`inline-${type}`} className=\"mb-3\">\n                                <Form.Check\n                                    inline\n                                    label=\"1\"\n                                    name=\"group1\"\n                                    type={type}\n                                    id={`inline-${type}-1`}\n                                />\n                                <Form.Check\n                                    inline\n                                    label=\"2\"\n                                    name=\"group1\"\n                                    type={type}\n                                    id={`inline-${type}-2`}\n                                />\n                                <Form.Check\n                                    inline\n                                    disabled\n                                    label=\"3 (disabled)\"\n                                    type={type}\n                                    id={`inline-${type}-3`}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n/* <Form onChange = {this.handleChange}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form> */","import './App.css';\nimport './Styles/styles.css';\nimport Button from 'react-bootstrap/Button'\nimport Form from './Components/Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <h1>Narrativa Interactiva</h1>\n        <div className=\"mb-2\">\n          <Button\n            className=\"o-button\" size=\"lg\" variant=\"primary\"\n          /*           href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\" */\n          >\n            Iniciar\n          </Button>\n\n          <Form>\n\n          </Form>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}